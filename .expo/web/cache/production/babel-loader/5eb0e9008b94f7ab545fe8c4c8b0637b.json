{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import Button from\"react-native-web/dist/exports/Button\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{Audio}from'expo-av';import*as React from'react';import Box from\"@mui/material/Box\";import Container from\"@mui/material/Container\";import{Recording}from'expo-av/build/Audio';import{StatusBar}from'expo-status-bar';import axios from'axios';import{duration}from'@mui/material';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function recorder(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),recording=_React$useState2[0],setRecording=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),recordings=_React$useState4[0],setRecordings=_React$useState4[1];function startRecording(){var _await$Audio$Recordin,_recording;return _regeneratorRuntime.async(function startRecording$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('Requesting permissions..');_context.next=4;return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());case 4:_context.next=6;return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({allowsRecordingIOS:true,playsInSilentModeIOS:true}));case 6:console.log('Starting recording..');_context.next=9;return _regeneratorRuntime.awrap(Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));case 9:_await$Audio$Recordin=_context.sent;_recording=_await$Audio$Recordin.recording;setRecording(_recording);console.log('Recording started');_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error('Failed to start recording',_context.t0);case 18:case\"end\":return _context.stop();}}},null,null,[[0,15]],Promise);}function sendToServer(recording,username){var fileName,blobToFile,audioURI,audioBlob,audioFile,uploadData,apiUploadPath;return _regeneratorRuntime.async(function sendToServer$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fileName='60seconds-audio.mp3';blobToFile=function blobToFile(blob,fileName){var file=new File([blob],fileName,{type:blob.type});return file;};audioURI=recording.getURI();_context2.next=5;return _regeneratorRuntime.awrap(fetch(audioURI).then(function(r){return r.blob();}));case 5:audioBlob=_context2.sent;audioFile=blobToFile(audioBlob,fileName);uploadData=new FormData();uploadData.append('username',username);uploadData.append('audio',audioFile);apiUploadPath='https://api.60seconds.io/api/upload';axios.post(apiUploadPath,uploadData);case 12:case\"end\":return _context2.stop();}}},null,null,null,Promise);}function stopRecording(){var updatedRecordings,_await$recording$crea,sound,status,failureCallback;return _regeneratorRuntime.async(function stopRecording$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:failureCallback=function _failureCallback(error){console.error(\"Error generating audio file: \"+error);};updatedRecordings=_toConsumableArray(recordings);console.log('Stopping recording..');setRecording(undefined);_context3.next=6;return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());case 6:_context3.next=8;return _regeneratorRuntime.awrap(recording.createNewLoadedSoundAsync());case 8:_await$recording$crea=_context3.sent;sound=_await$recording$crea.sound;status=_await$recording$crea.status;recording.getStatusAsync().then(function(result){console.log(\"The duration is: \"+result.durationMillis);updatedRecordings.push({sound:sound,duration:getDurationFormatted(result.durationMillis),file:recording.getURI()});}).catch(failureCallback);setRecordings(updatedRecordings);sendToServer(recording,'testUsername');case 14:case\"end\":return _context3.stop();}}},null,null,null,Promise);}function getDurationFormatted(millis){console.log(\"FORMATTING...\"+millis);var minutes=millis/1000/60;var minutesDisplay=Math.floor(minutes);var seconds=Math.round((minutes-minutesDisplay)*60);var secondsDisplay=seconds<10?\"0\"+seconds:seconds;var formattedDuration=minutesDisplay+\":\"+secondsDisplay;return formattedDuration;}function getRecordingLines(){return recordings.map(function(recordingLine,index){return _jsxs(View,{style:StyleSheet.row,children:[_jsxs(Text,{style:styles.fill,children:[\"Recording \",index+1,\" - \",recordingLine.duration]}),_jsx(Button,{style:styles.button,onPress:function onPress(){return recordingLine.sound.replayAsync();},title:\"Play\"})]},index);});}return _jsx(Container,{component:\"main\",maxWidth:\"sm\",children:_jsxs(Box,{sx:{marginTop:8,display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:[_jsx(Button,{title:recording?'Stop Recording':'Start Recording',onPress:recording?stopRecording:startRecording,type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2}}),getRecordingLines()]})});}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center',justifyContent:'center'},row:{flexDirection:'row',alignItems:'center',justifyContent:'center'},fill:{flex:1,margin:1},button:{margin:16}});","map":{"version":3,"sources":["/home/ubuntu/project-60seconds/components/recorder.js"],"names":["Audio","React","Box","Container","Recording","StatusBar","axios","duration","recorder","useState","recording","setRecording","recordings","setRecordings","startRecording","console","log","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","error","sendToServer","username","fileName","blobToFile","blob","file","File","type","audioURI","getURI","fetch","then","r","audioBlob","audioFile","uploadData","FormData","append","apiUploadPath","post","stopRecording","failureCallback","updatedRecordings","undefined","stopAndUnloadAsync","createNewLoadedSoundAsync","sound","status","getStatusAsync","result","durationMillis","push","getDurationFormatted","catch","millis","minutes","minutesDisplay","Math","floor","seconds","round","secondsDisplay","formattedDuration","getRecordingLines","map","recordingLine","index","StyleSheet","row","styles","fill","button","replayAsync","marginTop","display","flexDirection","alignItems","mt","mb","create","container","flex","backgroundColor","justifyContent","margin"],"mappings":"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","sourcesContent":["import { Button, StyleSheet, Text, View } from 'react-native';\nimport { Audio } from 'expo-av';\nimport * as React from 'react';\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport { Recording } from 'expo-av/build/Audio';\nimport { StatusBar } from 'expo-status-bar';\n\nimport axios from 'axios';\nimport { duration } from '@mui/material';\n\n\nexport default function recorder() {\n\n\tconst [recording, setRecording] = React.useState();\n\tconst [recordings, setRecordings] = React.useState([]);\n\n\tasync function startRecording() {\n\t\ttry {\n\t\t\tconsole.log('Requesting permissions..');\n\t\t\tawait Audio.requestPermissionsAsync();\n\t\t\tawait Audio.setAudioModeAsync({\n\t\t\t\tallowsRecordingIOS: true,\n\t\t\t\tplaysInSilentModeIOS: true,\n\t\t\t});\n\t\t\tconsole.log('Starting recording..');\n\t\t\tconst { recording } = await Audio.Recording.createAsync(\n\t\t\t\tAudio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n\t\t\t);\n\t\t\tsetRecording(recording);\n\t\t\tconsole.log('Recording started');\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to start recording', err);\n\t\t}\n\t}\n\n\tasync function sendToServer(recording, username) {\n\t\tconst fileName = '60seconds-audio.mp3'\n\n\t\t// SO snippet\n\t\tlet blobToFile = function (blob, fileName) {\n\t\t\tconst file = new File([blob], fileName, { type: blob.type });\n\n\t\t\treturn file;\n\t\t}\n\n\t\t// Get URI of the recording\n\t\tlet audioURI = recording.getURI();\n\n\t\t// Convert URI to blob\n\t\tlet audioBlob = await fetch(audioURI).then(r => r.blob());\n\n\t\t// Convert blob to file\n\t\tlet audioFile = blobToFile(audioBlob, fileName);\n\n\t\tlet uploadData = new FormData();\n\t\tuploadData.append('username', username);\n\t\tuploadData.append('audio', audioFile);\n\n\t\tlet apiUploadPath = 'https://api.60seconds.io/api/upload';\n\t\taxios.post(apiUploadPath, uploadData);\n\t}\n\n\n\tasync function stopRecording() {\n\n\t\tlet updatedRecordings = [...recordings];\n\n\t\tconsole.log('Stopping recording..');\n\t\tsetRecording(undefined);\n\t\tawait recording.stopAndUnloadAsync();\n\t\tconst { sound, status } = await recording.createNewLoadedSoundAsync();\n\n\t\trecording.getStatusAsync()\n\t\t\t.then(function (result) {\n\t\t\t\tconsole.log(\"The duration is: \" + result.durationMillis)\n\t\t\t\tupdatedRecordings.push({\n\t\t\t\t\tsound: sound,\n\t\t\t\t\tduration: getDurationFormatted(result.durationMillis),\n\t\t\t\t\tfile: recording.getURI()\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(failureCallback);\n\n\t\tfunction failureCallback(error) {\n\t\t\tconsole.error(\"Error generating audio file: \" + error);\n\t\t}\n\n\t\t\n\n\t\tsetRecordings(updatedRecordings);\n\n\t\t// Send to server\n\t\tsendToServer(recording, 'testUsername');\n\n\t}\n\n\n\n\tfunction getDurationFormatted(millis) {\n\t\tconsole.log(\"FORMATTING...\" + millis);\n\t\tconst minutes = millis / 1000 / 60;\n\t\tconst minutesDisplay = Math.floor(minutes);\n\t\tconst seconds = Math.round((minutes - minutesDisplay) * 60);\n\t\tconst secondsDisplay = seconds < 10 ? `0${seconds}` : seconds;\n\t\tvar formattedDuration = `${minutesDisplay}:${secondsDisplay}`;\n\t\treturn formattedDuration;\n\t}\n\n\tfunction getRecordingLines() {\n\t\treturn recordings.map((recordingLine, index) => {\n\t\t\treturn (\n\t\t\t\t<View key={index} style={StyleSheet.row}>\n\t\t\t\t\t<Text style={styles.fill}>Recording {index + 1} - {recordingLine.duration}</Text>\n\t\t\t\t\t<Button style={styles.button} onPress={() => recordingLine.sound.replayAsync()} title=\"Play\"></Button>\n\t\t\t\t</View>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"sm\">\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmarginTop: 8,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t}}>\n\t\t\t\t<Button\n\t\t\t\t\ttitle={recording ? 'Stop Recording' : 'Start Recording'}\n\t\t\t\t\tonPress={recording ? stopRecording : startRecording}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\n\t\t\t\t/>\n\t\t\t\t{getRecordingLines()}\n\t\t\t</Box>\n\t\t</Container>\n\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tfill: {\n\t\tflex: 1,\n\t\tmargin: 1,\n\t},\n\tbutton: {\n\t\tmargin: 16,\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}