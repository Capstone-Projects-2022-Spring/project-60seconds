{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import styles from\"../App.style\";import{Audio}from'expo-av';import{jsx as _jsx}from\"react/jsx-runtime\";export default function playButton(_ref){var parentToChild2=_ref.parentToChild2;var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),sound=_React$useState2[0],setSound=_React$useState2[1];function playSound(){var _await$Audio$Sound$cr,sound;return _regeneratorRuntime.async(function playSound$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Audio.Sound.createAsync(parentToChild2));case 2:_await$Audio$Sound$cr=_context.sent;sound=_await$Audio$Sound$cr.sound;setSound(sound);_context.next=7;return _regeneratorRuntime.awrap(sound.playAsync());case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);}React.useEffect(function(){return sound?function(){sound.unloadAsync();}:undefined;},[sound]);if(parentToChild2.includes(\"http\")){return _jsx(Button,{title:\"Play Sound\",onPress:playSound});}else{return _jsx(\"p\",{children:parentToChild2});}}","map":{"version":3,"sources":["/home/ubuntu/project-60seconds/components/playbutton.js"],"names":["React","useState","styles","Audio","playButton","parentToChild2","sound","setSound","playSound","Sound","createAsync","playAsync","useEffect","unloadAsync","undefined","includes"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,8GAEA,MAAOC,CAAAA,MAAP,oBACA,OAASC,KAAT,KAAuB,SAAvB,C,2CAEA,cAAe,SAASC,CAAAA,UAAT,MAAqC,IAAhBC,CAAAA,cAAgB,MAAhBA,cAAgB,CAEhD,oBAA0BL,KAAK,CAACC,QAAN,EAA1B,oDAAOK,KAAP,qBAAcC,QAAd,qBAEA,QAAeC,CAAAA,SAAf,uMAE0BL,KAAK,CAACM,KAAN,CAAYC,WAAZ,CAAwBL,cAAxB,CAF1B,6CAEUC,KAFV,uBAEUA,KAFV,CAGEC,QAAQ,CAACD,KAAD,CAAR,CAHF,iDAMQA,KAAK,CAACK,SAAN,EANR,uEAQAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB,MAAON,CAAAA,KAAK,CACR,UAAM,CAEJA,KAAK,CAACO,WAAN,GAAsB,CAHhB,CAIRC,SAJJ,CAKD,CAND,CAMG,CAACR,KAAD,CANH,EASA,GAAGD,cAAc,CAACU,QAAf,CAAwB,MAAxB,CAAH,CAAmC,CAE/B,MACI,MAAC,MAAD,EAAQ,KAAK,CAAC,YAAd,CAA2B,OAAO,CAAEP,SAApC,EADJ,CAGH,CALD,IAKO,CACH,MACI,oBAAIH,cAAJ,EADJ,CAGH,CAEJ","sourcesContent":["import React, {useState} from \"react\";\nimport { View, Button } from 'react-native';\nimport styles from '../App.style';\nimport { Audio }  from 'expo-av';\n\nexport default function playButton({parentToChild2}){\n    \n    const [sound, setSound] = React.useState();\n\n    async function playSound() {\n      //console.log('Loading Sound');\n      const { sound } = await Audio.Sound.createAsync(parentToChild2);\n      setSound(sound);\n  \n      //console.log('Playing Sound');\n      await sound.playAsync(); }\n  \n    React.useEffect(() => {\n      return sound\n        ? () => {\n            //console.log('Unloading Sound');\n            sound.unloadAsync(); }\n        : undefined;\n    }, [sound]);\n  \n    // if the data sent from the day component is a link, display button. else, display text.\n    if(parentToChild2.includes(\"http\")){\n        //console.log(\"true link\")\n        return (\n            <Button title=\"Play Sound\" onPress={playSound} />\n        );\n    } else {\n        return(\n            <p>{parentToChild2}</p>\n        )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}