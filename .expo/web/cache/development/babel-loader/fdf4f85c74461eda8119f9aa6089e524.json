{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\nimport Login from \"./Pages/Login\";\nimport Calendar from \"./Pages/Calendar\";\nimport Profile from \"./Pages/Profile\";\nimport Record from \"./Pages/Record\";\nimport ErrorPage from \"./Pages/ErrorPage\";\nimport Register from \"./components/register\";\nimport Logout from \"./components/logout\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState(\"false\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoggedIn = _React$useState2[0],\n      setIsLoggedIn = _React$useState2[1];\n\n  var changeLoginToTrue = function changeLoginToTrue() {\n    setIsLoggedIn('true');\n  };\n\n  var changeLoginToFalse = function changeLoginToFalse() {\n    setIsLoggedIn('false');\n  };\n\n  return _jsxs(Router, {\n    children: [_jsx(Navbar, {\n      isLoggedIn: isLoggedIn,\n      changeLoginToFalse: changeLoginToFalse\n    }), _jsxs(Routes, {\n      children: [_jsx(Route, {\n        path: \"/\",\n        element: _jsx(Home, {})\n      }), _jsx(Route, {\n        path: \"/About\",\n        element: _jsx(About, {})\n      }), _jsx(Route, {\n        path: \"/Login\",\n        element: _jsx(Login, {\n          changeLoginToTrue: changeLoginToTrue,\n          changeLoginToFalse: changeLoginToFalse\n        })\n      }), _jsx(Route, {\n        path: \"/Register\",\n        element: _jsx(Register, {})\n      }), _jsx(Route, {\n        path: \"/Logout\",\n        element: _jsx(Logout, {})\n      }), _jsx(Route, {\n        path: \"/Calendar\",\n        element: _jsx(Calendar, {})\n      }), _jsx(Route, {\n        path: \"/Record\",\n        element: _jsx(Record, {})\n      }), _jsx(Route, {\n        path: \"/Profile\",\n        element: _jsx(Profile, {})\n      }), _jsx(Route, {\n        path: \"*\",\n        element: _jsx(ErrorPage, {})\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["/home/zack/Desktop/60Seconds/frontend1/project-60seconds/App.js"],"names":["Navbar","Home","About","Login","Calendar","Profile","Record","ErrorPage","Register","Logout","BrowserRouter","Router","Routes","Route","React","App","useState","isLoggedIn","setIsLoggedIn","changeLoginToTrue","changeLoginToFalse"],"mappings":";AAAA,OAAOA,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,wBAAoCD,KAAK,CAACE,QAAN,CAAe,OAAf,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,aAAa,CAAC,MAAD,CAAb;AACD,GAFD;;AAIA,MAAME,kBAAkB,GAAI,SAAtBA,kBAAsB,GAAM;AAChCF,IAAAA,aAAa,CAAC,OAAD,CAAb;AACD,GAFD;;AAIA,SACE,MAAC,MAAD;AAAA,eACE,KAAC,MAAD;AAAQ,MAAA,UAAU,EAAED,UAApB;AAAgC,MAAA,kBAAkB,EAAEG;AAApD,MADF,EAEE,MAAC,MAAD;AAAA,iBACE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,EAAE,KAAC,IAAD;AAAzB,QADF,EAEE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAE,KAAC,KAAD;AAA9B,QAFF,EAGE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAE,KAAC,KAAD;AAAO,UAAA,iBAAiB,EAAED,iBAA1B;AAA6C,UAAA,kBAAkB,EAAEC;AAAjE;AAA9B,QAHF,EAIE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,EAAE,KAAC,QAAD;AAAjC,QAJF,EAKE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,EAAE,KAAC,MAAD;AAA/B,QALF,EAME,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,EAAE,KAAC,QAAD;AAAjC,QANF,EAOE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,EAAE,KAAC,MAAD;AAA/B,QAPF,EAQE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAE,KAAC,OAAD;AAAhC,QARF,EASE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,EAAE,KAAC,SAAD;AAAzB,QATF;AAAA,MAFF;AAAA,IADF;AAgBD","sourcesContent":["import Navbar from './components/navbar'\nimport Home from './Pages/Home';\nimport About from './Pages/About';\nimport Login from './Pages/Login';\nimport Calendar from './Pages/Calendar';\nimport Profile from './Pages/Profile'\nimport Record from './Pages/Record';\nimport ErrorPage from './Pages/ErrorPage';\nimport Register from './components/register';\nimport Logout from './components/logout';\nimport {BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React from 'react';\n\nexport default function App() {\n  \n  const [isLoggedIn, setIsLoggedIn] = React.useState(\"false\");\n  const changeLoginToTrue = () => {\n    setIsLoggedIn('true');\n  }\n\n  const changeLoginToFalse  = () => {\n    setIsLoggedIn('false');\n  }\n\n  return (\n    <Router>\n      <Navbar isLoggedIn={isLoggedIn} changeLoginToFalse={changeLoginToFalse}/>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/About\" element={<About/>}/>\n        <Route path=\"/Login\" element={<Login changeLoginToTrue={changeLoginToTrue} changeLoginToFalse={changeLoginToFalse}/>}/>\n        <Route path=\"/Register\" element={<Register/>}/>\n        <Route path=\"/Logout\" element={<Logout/>}/>\n        <Route path=\"/Calendar\" element={<Calendar/>}/>\n        <Route path=\"/Record\" element={<Record/>}/>\n        <Route path=\"/Profile\" element={<Profile/>}/>\n        <Route path=\"*\" element={<ErrorPage/>}/>\n      </Routes>\n    </Router>\n  );\n}"]},"metadata":{},"sourceType":"module"}