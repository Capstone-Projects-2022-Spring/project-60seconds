{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"../App.style\";\nimport axios from \"axios\";\nimport PlayButton from \"./playbutton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\naxios.defaults.withCredentials = true;\nexport default function Day(_ref) {\n  var parentToChild = _ref.parentToChild;\n  var x;\n  axios.get('https://api.60seconds.io/api/user').then(function (response) {\n    if (response.status !== 200) {\n      alert('Not logged in!');\n    }\n\n    console.log(response.data.username);\n  });\n  console.log(x);\n  var selectedDateString = parentToChild.getFullYear() + '-' + (parentToChild.getMonth() + 1) + '-' + parentToChild.getDate();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var parentToChild2 = function parentToChild2(linkToSet) {\n    setData(linkToSet.toString());\n  };\n\n  axios.get('https://api.60seconds.io/api/get_links', {\n    params: {\n      username: \"testUsername\",\n      date: selectedDateString\n    }\n  }).then(function (response) {\n    if (response.data.length == 0) {\n      parentToChild2('No recordings made this day.');\n    } else {\n      parentToChild2(response.data[response.data.length - 1].link);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n  return _jsx(\"div\", {\n    className: \"dayBox\",\n    children: _jsxs(View, {\n      style: styles.dayBox,\n      children: [_jsx(\"h3\", {\n        children: parentToChild.toDateString()\n      }), _jsx(PlayButton, {\n        parentToChild2: data\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/home/zack/Desktop/60Seconds/frontend1/project-60seconds/components/day.js"],"names":["React","useState","styles","axios","PlayButton","defaults","withCredentials","Day","parentToChild","x","get","then","response","status","alert","console","log","data","username","selectedDateString","getFullYear","getMonth","getDate","setData","parentToChild2","linkToSet","toString","params","date","length","link","catch","error","dayBox","toDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;;;AAEAD,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,eAAe,SAASC,GAAT,OAA6B;AAAA,MAAfC,aAAe,QAAfA,aAAe;AACxC,MAAIC,CAAJ;AAEAN,EAAAA,KAAK,CAACO,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAoD,UAASC,QAAT,EAAmB;AACrE,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAAT,CAAcC,QAA1B;AAGD,GARD;AAUAH,EAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AAEA,MAAIU,kBAAkB,GAAGX,aAAa,CAACY,WAAd,KAA8B,GAA9B,IAAqCZ,aAAa,CAACa,QAAd,KAAyB,CAA9D,IAAmE,GAAnE,GAAyEb,aAAa,CAACc,OAAd,EAAlG;;AAEA,kBAAwBrB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAaM,OAAb;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACpCF,IAAAA,OAAO,CAACE,SAAS,CAACC,QAAV,EAAD,CAAP;AACD,GAFD;;AAKAvB,EAAAA,KAAK,CAACO,GAAN,CAAU,wCAAV,EAAoD;AAChDiB,IAAAA,MAAM,EAAE;AACNT,MAAAA,QAAQ,EAAE,cADJ;AAENU,MAAAA,IAAI,EAAET;AAFA;AADwC,GAApD,EAMGR,IANH,CAMQ,UAAUC,QAAV,EAAoB;AAExB,QAAGA,QAAQ,CAACK,IAAT,CAAcY,MAAd,IAAwB,CAA3B,EAA6B;AAC3BL,MAAAA,cAAc,CAAC,8BAAD,CAAd;AACD,KAFD,MAEO;AAELA,MAAAA,cAAc,CAACZ,QAAQ,CAACK,IAAT,CAAcL,QAAQ,CAACK,IAAT,CAAcY,MAAd,GAAuB,CAArC,EAAwCC,IAAzC,CAAd;AACD;AACF,GAdH,EAeGC,KAfH,CAeS,UAAUC,KAAV,EAAiB;AACtBjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,GAjBH;AAmBA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE9B,MAAM,CAAC+B,MAApB;AAAA,iBACI;AAAA,kBAAKzB,aAAa,CAAC0B,YAAd;AAAL,QADJ,EAEI,KAAC,UAAD;AAAY,QAAA,cAAc,EAAEjB;AAA5B,QAFJ;AAAA;AADJ,IADJ;AAQH","sourcesContent":["import React, {useState} from \"react\";\nimport { View } from 'react-native';\nimport styles from '../App.style';\nimport axios from \"axios\";\nimport PlayButton from './playbutton';\n\naxios.defaults.withCredentials = true;\n\nexport default function Day({parentToChild}){\n    var x;\n\n    axios.get('https://api.60seconds.io/api/user').then(function(response) {\n      if (response.status !== 200) {\n          alert('Not logged in!');\n      }\n\n      console.log(response.data.username);\n\n\n    });\n\n    console.log(x);\n\n    let selectedDateString = parentToChild.getFullYear() + '-' + (parentToChild.getMonth()+1) + '-' + parentToChild.getDate();\n    //console.log(selectedDateString);\n    const [data, setData] = useState('');\n\n    const parentToChild2 = (linkToSet) => {\n      setData(linkToSet.toString());\n    }\n\n    //querying backend for links based on day.\n    axios.get('https://api.60seconds.io/api/get_links', {\n        params: {\n          username: \"testUsername\",\n          date: selectedDateString\n        }\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        if(response.data.length == 0){\n          parentToChild2('No recordings made this day.');\n        } else {\n          //for milestone demo 2, it plays the most recent recording returned from the query\n          parentToChild2(response.data[response.data.length - 1].link);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return(\n        <div className=\"dayBox\">\n            <View style={styles.dayBox}>\n                <h3>{parentToChild.toDateString()}</h3>\n                <PlayButton parentToChild2={data}/>\n            </View>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}